[project]
name = "staticx"
dynamic = ["version"]

authors = [
    {name = "Jonathon Reinhart", email="jonathon.reinhart@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Build Tools",
]
dependencies = [
    "pyelftools",
    # TODO(#264): Remove when Python 3.7 support is removed.
    "importlib_metadata; python_version<'3.8'",
    # TODO(#265): Remove when Python 3.8 support is removed.
    "importlib_resources; python_version<'3.9'",
]
description = "Build static self-extracting app from dynamic executable"
license = {file = "LICENSE.txt"}
readme = "README.md"
requires-python = ">=3.7"

[project.scripts]
staticx = "staticx.__main__:main"
sx-extract = "staticx.extract:main"

[project.urls]
documentation = "https://staticx.readthedocs.io/"
repository = "https://github.com/JonathonReinhart/staticx"
changelog = "https://github.com/JonathonReinhart/staticx/blob/main/CHANGELOG.md"

[build-system]
# Tells pip to install wheel before trying to install
# from an sdist or from Github.
requires = [
    "wheel",
    "setuptools >= 42.0.0",
    # TODO(#264): Remove when Python 3.7 support is removed.
    "importlib_metadata; python_version<'3.8'",
]

# mypy
[tool.mypy]
python_version = "3.7"
warn_unused_configs = true
warn_return_any = true
# TODO: Use staticx package when all modules have been updated.
#packages = ["staticx"]
modules = [
    "staticx",  # __init__.py
    "staticx.bcjfilter",
    "staticx.constants",
    "staticx.errors",
    "staticx.utils",
    "staticx.version",
]
# TODO: Remove when all modules have been updated.
follow_imports = 'silent'


[[tool.mypy.overrides]]
module = "staticx.*"
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
